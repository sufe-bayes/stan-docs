---
pagetitle: Proportionality Constants
---

# Proportionality Constants  {#proportionality-constants.chapter}

# 比例常数 {#proportionality-constants.chapter--cn}

本节译者：沈梓梁
本节校审：李君竹

When evaluating a likelihood or prior as part of the log density computation in
MCMC, variational inference, or optimization, it is usually only necessary to
compute the functions up to a proportionality constant (or similarly compute
log densities up to an additive constant). In MCMC this comes from the fact that
the distribution being sampled does not need to be normalized (and so it is the
normalization constant that is ignored). Similarly the distribution does not
need normalized to perform variational inference or do optimizations. The advantage
of working with unnormalized distributions is they can make computation quite a
bit cheaper.

在 MCMC、变分推理或优化问题的对数密度计算中，需要评估似然或先验的一部分，
通常只需要计算到成常数比例的函数(或者类似地计算到相差常数的对数密度).
在 MCMC 中，这是因为被采样的分布不需要归一化(因此忽略的是归一化常数).
类似地，当进行变分推理或优化时，所需要的分布也不需要归一化.
而使用非归一化分布的好处是，它们可以使计算成本大大降低.

There are three different syntaxes to build the model in Stan. The way
to select between them is by determining if the proportionality constants are
necessary. If performance is not a problem, it is always safe to use the 
normalized densities.

在 Stan 中有三种不同的语法来建立模型.
我们可以根据问题是否需要比例常数，来选择不同的语法.
如果性能不是问题，使用归一化密度总是谨慎的.

The distribution statement (`~`) and log density increment statement
(`target +=`) with `_lupdf()` use unnormalized densities for $x$
(dropping proportionality constants):

前两种语法使用非归一化的密度(即去掉比例常数):

```stan
x ~ normal(0, 1);
target += normal_lupdf(x | 0, 1); // the 'u' is for unnormalized
```

The log density increment statement (`target +=`) with `_lpdf()`
uses the full normalized density for $x$ (dropping no constants):

最后的语法使用完整的归一化密度(即不去掉比例常量):

```stan
target += normal_lpdf(x | 0, 1);
```

For discrete distributions, the `target +=` syntax is using `_lupmf`
and `_lpmf` instead:

对于离散分布，`target +=` 语法应为 `_lupmf` 与 `_lpmf`:

```stan
y ~ bernoulli(0.5);
target += bernoulli_lupmf(y | 0.5);
target += bernoulli_lpmf(y | 0.5);
```

## Dropping Proportionality Constants

## 不考虑比例常数的情况

If a density $p(\theta)$ can be factored into $K g(\theta)$ where $K$ are all
the factors that are a not a function of $\theta$ and $g(\theta)$ are all the
terms that are a function of $\theta$, then it is said that $g(\theta)$
is proportional to $p(\theta)$ up to a constant.

如果一个密度 $p(\theta)$ 可以分解成 $K g(\theta)$，
其中 $K$ 是一个不含 $\theta$ 的常数，
而 $g(\theta)$ 是 $\theta$ 所有函数关系的项，
那么可以说 $g(\theta)$ 与 $p(\theta)$ 成正比，相差一个常数.

The advantage of all this is that sometimes $K$ is expensive to compute and if
it is not a function of the distribution that is to be sampled (or optimized or
approximated with variational inference), there is no need to compute it
because it will not affect the results.

所有这一切的优点是，有时 $K$ 的计算成本很高，
如果它不是要采样的分布的函数（或用变分推理优化或近似），
则不需要计算它，因为它不会影响结果.

Stan takes advantage of the proportionality constant fact with the `~` syntax.
Take for instance the normal data model:

Stan 正是通过 `~` 语法利用了比例常数的不影响结果的事实.
以正态似然为例:

```stan
data {
  real mu;
  real<lower=0.0> sigma;
}
parameters {
  real x;
}
model {
  x ~ normal(mu, sigma);
}
```

Syntactically, this is just shorthand for the equivalent model that replaces the
`~` syntax with a `target +=` statement and a `normal_lupdf` function call:

在语法上，通过带有 `target +=` 语句
和 `normal_lupdf` 函数调用的 `~` 语法达成替换的等价模型的简写:

```stan
data {
  real mu;
  real<lower=0.0> sigma;
}
parameters {
  real x;
}
model {
  target += normal_lupdf(x | mu, sigma)
}
```

The function `normal_lupdf` is only guaranteed to return the log density of the
normal distribution up to a proportionality constant density to be sampled. The
proportionality constant itself is not defined. The full log density of the
statement here is:

函数 `normal_lupdf` 只保证返回正态分布的对数密度，
直到要采样的比例常数密度.比例常数本身没有定义.
这里语句的完整对数密度是:

$$
\textsf{normal\_lpdf}(x | \mu, \sigma) =
-\log \left( \sigma \sqrt{2 \pi} \right)
-\frac{1}{2} \left( \frac{x - \mu}{\sigma} \right)^2.
$$

Now because the density here is only a function of $x$, the additive terms in
the log density that are not a function of $x$ can be dropped. In this case it
is enough to know only the quadratic term:

因为这里的密度只是 $x$ 的函数，
所以对数密度中与 $x$ 无关的附加项可以去掉.
在这种情况下，只知道二次项就足够了:

$$
\textsf{normal\_lupdf}(x | \mu, \sigma) =
-\frac{1}{2} \left( \frac{x - \mu}{\sigma} \right)^2.
$$

## Keeping Proportionality Constants

## 考虑比例常数的情况

In the case that the proportionality constants were needed for a normal log
density the function `normal_lpdf` can be used. For clarity, if there is ever
a situation where it is unclear if the normalization is necessary, it should
always be safe to include it. Only use the `~` or `target += normal_lupdf`
syntaxes if it is absolutely clear that the proportionality constants are not
necessary.

在正态对数密度需要比例常数的情况下，可以使用函数 `normal_lpdf`.
为了清楚起见，如果在某种情况下不清楚是否有必要进行归一化，那么将其包含进来应该总是谨慎的.
只有在绝对清楚不需要比例常数的情况下才使用 `~` 或 `target += normal_lupdf` 语法.

## User-defined Distributions

## 用户定义的分布

When a custom `_lpdf` or `_lpmf` function is defined, the compiler will
automatically make available a `_lupdf` or `_lupmf` version of the function.
It is only possible to define custom distributions in the normalized
form in Stan. Any attempt to define an unnormalized distribution directly will
result in an error.

当定义自定义 `_lpdf` 或 `_lpmf` 函数时，编译器将自动提供该函数的 `_lupdf` 或 `_lupmf` 版本。
在 Stan 中只能以归一化的形式定义自定义分布.
任何直接定义非归一化分布的尝试都会导致错误.

The difference in the normalized and unnormalized versions of custom probability
functions is how probability functions are treated inside these functions. Any
internal unnormalized probability function call will be replaced with its normalized
equivalent if the normalized version of the parent custom distribution is called.

自定义概率函数的归一化和非归一化版本的区别在于在这些函数中如何处理概率函数.
如果调用外层自定义分布的规范化版本，则任何内部非规范化概率函数调用都将被其规范化等效函数替换.

The following code demonstrates the different behaviors:

下面的代码演示了不同的反应:

```stan
functions {
  real custom1_lpdf(x) {
    return normal_lupdf(x | 0.0, 1.0)
  }
  real custom2_lpdf(x) {
    return normal_lpdf(x | 0.0, 1.0)
  }
}
parameters {
  real mu;
}
model {
  mu ~ custom1(); // Normalization constants dropped
  target += custom1_lupdf(mu); // Normalization constants dropped
  target += custom1_lpdf(mu);  // Normalization constants kept

  mu ~ custom2();  // Normalization constants kept
  target += custom2_lupdf(mu);  // Normalization constants kept
  target += custom2_lpdf(mu);  // Normalization constants kept
}
```

## Limitations on Using `_lupdf` and `_lupmf` Functions

## 使用 `_lupdf` 和 `_lupmf` 函数的限制

To avoid ambiguities in how the normalization constants work, functions ending
in `_lupdf` and `_lupmf` can only be used in the model block or user-defined
probability functions (functions ending in `_lpdf` or `_lpmf`).

为了避免规范化常量如何工作的歧义，
以 `_lupdf` 和 `_lupmf` 结尾的函数只能在模型块或用户定义的概率函数(以 `_lpdf` 或 `_lpmf` 结尾的函数)中使用.

